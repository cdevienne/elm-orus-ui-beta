[{"name":"OUI","comment":"\n\n@docs Color\n\n","unions":[{"name":"Color","comment":" Colors\n","args":[],"cases":[["Primary",[]],["PrimaryContainer",[]],["Secondary",[]],["SecondaryContainer",[]],["Tertiary",[]],["TertiaryContainer",[]],["Neutral",[]],["Error",[]],["ErrorContainer",[]]]}],"aliases":[],"values":[],"binops":[]},{"name":"OUI.Button","comment":" A button creation API\n\n@docs Button, Type, Action\n\n\n# Constructor\n\n@docs new\n\n\n# Basic properties\n\n@docs withIcon, color\n\n\n# Actions\n\nA button must have one and only one action that can be set with one of the\nfollowing functions.\n\n@docs onClick, link, disabled\n\n\n# Button types\n\n@docs elevatedButton, filledButton, outlinedButton, textButton, smallFAB, mediumFAB, largeFAB, extendedFAB, iconButton, filledIconButton, outlinedIconButton\n\n\n# Internal\n\n@docs Properties, properties\n\n","unions":[{"name":"Action","comment":" A button action\n","args":["msg"],"cases":[["Disabled",[]],["OnClick",["msg"]],["Link",["String.String"]]]},{"name":"Button","comment":" A button\n","args":["constraints","msg"],"cases":[]},{"name":"Type","comment":" A button type\n","args":[],"cases":[["Elevated",[]],["Filled",[]],["Outlined",[]],["Text",[]],["SmallFAB",[]],["MediumFAB",[]],["LargeFAB",[]],["ExtendedFAB",[]],["FilledIcon",[]],["OutlinedIcon",[]],["Icon",[]]]}],"aliases":[{"name":"Properties","comment":" ","args":["msg"],"type":"{ text : String.String, icon : Maybe.Maybe OUI.Icon.Icon, action : OUI.Button.Action msg, color : OUI.Color, type_ : OUI.Button.Type }"}],"values":[{"name":"color","comment":" Set the button primary color\n","type":"OUI.Color -> OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"disabled","comment":" Set the button as 'disabled'\n","type":"OUI.Button.Button { props | needOnClickOrDisabled : () } msg -> OUI.Button.Button { a | hasAction : () } msg"},{"name":"elevatedButton","comment":" Set the button type to 'Elevated' (default)\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"extendedFAB","comment":" Set the button type to 'ExtendedFAB'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"filledButton","comment":" Set the button type to 'Filled'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"filledIconButton","comment":" Set the button type to 'FilledIconButton'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"iconButton","comment":" Set the button type to 'IconButton'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"largeFAB","comment":" Set the button type to 'LargeFAB'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"link","comment":" Set the button as a link to the given URL\n","type":"String.String -> OUI.Button.Button { props | needOnClickOrDisabled : () } msg -> OUI.Button.Button { a | hasAction : () } msg"},{"name":"mediumFAB","comment":" Set the button type to 'MediumFAB'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"new","comment":" Create a button with the given label\n\nA text and an action (onClick, link or disabled) must be set before it can be\nrendered\n\nThe text is mandatory for icon buttons too and will be used as a 'aria-label'\nproperty.\n\nBy default, the button is of the 'Elevated' type, and its color is 'Primary'\n\n","type":"String.String -> OUI.Button.Button { needOnClickOrDisabled : (), hasNoIcon : () } msg"},{"name":"onClick","comment":" Set the button 'onClick' handler\n","type":"msg -> OUI.Button.Button { a | needOnClickOrDisabled : () } msg -> OUI.Button.Button { a | hasAction : () } msg"},{"name":"outlinedButton","comment":" Set the button type to 'Outlined'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"outlinedIconButton","comment":" Set the button type to 'OutlinedIconButton'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"properties","comment":" ","type":"OUI.Button.Button { constraints | hasAction : () } msg -> OUI.Button.Properties msg"},{"name":"smallFAB","comment":" Set the button type to 'SmallFAB'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"textButton","comment":" Set the button type to 'TextButton'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"withIcon","comment":" Set the button icon\n\nCan only be called once\n\n","type":"OUI.Icon.Icon -> OUI.Button.Button { a | hasNoIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"}],"binops":[]},{"name":"OUI.Checkbox","comment":"\n\n\n# Constructor\n\n@docs new, Checkbox\n@docs withIcon, withColor, withChecked, onChange, disabled\n\n\n# Internals\n\n@docs Properties, properties\n\n","unions":[{"name":"Checkbox","comment":" A Checkbox component\n","args":["constraints","msg"],"cases":[]}],"aliases":[{"name":"Properties","comment":" ","args":["msg"],"type":"{ checked : Basics.Bool, icon : OUI.Icon.Icon, onChange : Maybe.Maybe (Basics.Bool -> msg), color : OUI.Color }"}],"values":[{"name":"disabled","comment":" disable the checkbox\n","type":"OUI.Checkbox.Checkbox { a | needOnChangeOrDisabled : () } msg -> OUI.Checkbox.Checkbox { a | hasAction : () } msg"},{"name":"new","comment":" creates a checkbox. It must get a 'onChange' handler or be 'disabled'.\n","type":"OUI.Checkbox.Checkbox { needOnChangeOrDisabled : (), needChecked : () } msg"},{"name":"onChange","comment":" Set a change handler msg\n","type":"(Basics.Bool -> msg) -> OUI.Checkbox.Checkbox { a | needOnChangeOrDisabled : () } msg -> OUI.Checkbox.Checkbox { a | hasAction : () } msg"},{"name":"properties","comment":" ","type":"OUI.Checkbox.Checkbox { a | hasAction : (), withChecked : () } msg -> OUI.Checkbox.Properties msg"},{"name":"withChecked","comment":" Set the 'checked' state. It not used, the checkbox is 'undetermined'.\n","type":"Basics.Bool -> OUI.Checkbox.Checkbox { a | needChecked : () } msg -> OUI.Checkbox.Checkbox { a | withChecked : () } msg"},{"name":"withColor","comment":" Change the checkbox color\n","type":"OUI.Color -> OUI.Checkbox.Checkbox a msg -> OUI.Checkbox.Checkbox a msg"},{"name":"withIcon","comment":" Change the check icon used at rendering\n","type":"OUI.Icon.Icon -> OUI.Checkbox.Checkbox a msg -> OUI.Checkbox.Checkbox a msg"}],"binops":[]},{"name":"OUI.Explorer","comment":"\n\n@docs Book, BookMsg, Page, Route, Shared, SharedMsg, Explorer\n@docs setTheme, ColorSchemeType, setColorScheme, addBook, book, statefulBook, category, bookMsg, logEvent, explorer, finalize\n@docs withMarkdownChapter, withStaticChapter, withChapter\n\n","unions":[{"name":"BookMsg","comment":" A stateless book message\n","args":["msg"],"cases":[]},{"name":"ColorSchemeType","comment":" Color scheme light/dark\n","args":[],"cases":[]},{"name":"SharedMsg","comment":" Shared state message\n","args":[],"cases":[]}],"aliases":[{"name":"Book","comment":" A stateless book\n","args":["model","msg"],"type":"{ title : String.String, init : OUI.Explorer.Shared -> ( model, Effect.Effect OUI.Explorer.SharedMsg msg ), update : OUI.Explorer.Shared -> msg -> model -> ( model, Effect.Effect OUI.Explorer.SharedMsg msg ), subscriptions : OUI.Explorer.Shared -> model -> Platform.Sub.Sub msg, chapters : List.List (OUI.Explorer.Shared -> model -> Element.Element (OUI.Explorer.BookMsg msg)) }"},{"name":"Explorer","comment":" ","args":["shared","sharedMsg","current","previous","currentMsg","previousMsg"],"type":"{ app : Spa.Builder OUI.Explorer.Route () shared sharedMsg (OUI.Explorer.Page (Spa.PageStack.Msg OUI.Explorer.Route currentMsg previousMsg)) current previous currentMsg previousMsg, categories : List.List ( String.String, List.List String.String ), initialShared : OUI.Explorer.Shared }"},{"name":"Page","comment":" A explorer page\n","args":["msg"],"type":"{ title : String.String, content : Element.Element msg }"},{"name":"Route","comment":" The explorer routes are simple strings\n","args":[],"type":"String.String"},{"name":"Shared","comment":" The shared state\n","args":[],"type":"{ lastEvents : List.List String.String, theme : OUI.Material.Theme.Theme, colorSchemeList : List.List ( OUI.Material.Color.Scheme, OUI.Material.Color.Scheme ), selectedColorScheme : ( Basics.Int, OUI.Explorer.ColorSchemeType ) }"}],"values":[{"name":"addBook","comment":" Add a book to the current category\n","type":"OUI.Explorer.Book model msg -> OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg current previous currentMsg previousMsg -> OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg model (Spa.PageStack.Model Spa.SetupError current previous) (OUI.Explorer.BookMsg msg) (Spa.PageStack.Msg OUI.Explorer.Route currentMsg previousMsg)"},{"name":"book","comment":" Creates a new static book\n","type":"String.String -> OUI.Explorer.Book () ()"},{"name":"bookMsg","comment":" wrap a book msg into a `BookMsg msg`. This is needed in views.\n","type":"msg -> OUI.Explorer.BookMsg msg"},{"name":"category","comment":" Add a category to a Explorer\n\nAll subsequent books will be added to this category, until a new category is\nadded.\n\n","type":"String.String -> OUI.Explorer.Explorer shared sharedMsg current previous currentMsg previousMsg -> OUI.Explorer.Explorer shared sharedMsg current previous currentMsg previousMsg"},{"name":"explorer","comment":" creates an empty Explorer\n","type":"OUI.Explorer.Explorer shared sharedMsg () () () ()"},{"name":"finalize","comment":" Finalize a explorer and returns Program\n","type":"OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg current previous currentMsg previousMsg -> Spa.Application Json.Decode.Value OUI.Explorer.Shared OUI.Explorer.SharedMsg String.String current previous currentMsg previousMsg"},{"name":"logEvent","comment":" A simple log event\n\nThe passed string will be logged in the log event window\n\n","type":"String.String -> OUI.Explorer.BookMsg msg"},{"name":"setColorScheme","comment":" setColorScheme\n","type":"OUI.Material.Color.Scheme -> OUI.Material.Color.Scheme -> OUI.Explorer.Explorer shared sharedMsg c p cm pm -> OUI.Explorer.Explorer shared sharedMsg c p cm pm"},{"name":"setTheme","comment":" set the theme\n","type":"OUI.Material.Theme.Theme -> OUI.Explorer.Explorer shared sharedMsg c p cm pm -> OUI.Explorer.Explorer shared sharedMsg c p cm pm"},{"name":"statefulBook","comment":" Creates a new stateful book\n","type":"String.String -> { init : OUI.Explorer.Shared -> ( model, Effect.Effect OUI.Explorer.SharedMsg msg ), update : OUI.Explorer.Shared -> msg -> model -> ( model, Effect.Effect OUI.Explorer.SharedMsg msg ), subscriptions : OUI.Explorer.Shared -> model -> Platform.Sub.Sub msg } -> OUI.Explorer.Book model msg"},{"name":"withChapter","comment":" Add a chapter to a book\n","type":"(OUI.Explorer.Shared -> model -> Element.Element (OUI.Explorer.BookMsg msg)) -> OUI.Explorer.Book model msg -> OUI.Explorer.Book model msg"},{"name":"withMarkdownChapter","comment":" Add a mardown chapter to a book\n","type":"String.String -> OUI.Explorer.Book model msg -> OUI.Explorer.Book model msg"},{"name":"withStaticChapter","comment":" Add a static content chapter to a book\n","type":"(OUI.Explorer.Shared -> Element.Element (OUI.Explorer.BookMsg msg)) -> OUI.Explorer.Book model msg -> OUI.Explorer.Book model msg"}],"binops":[]},{"name":"OUI.Icon","comment":"\n\n\n# Constructor\n\n@docs Icon, withSize, withColor\n\n\n# Stock icons\n\n@docs check, clear, light_mode, dark_mode\n\n\n# Adapters\n\n@docs elmMaterialIcons, materialIcons\n\n\n# Internals\n\n@docs Renderer, Properties, properties\n\n","unions":[{"name":"Icon","comment":" An Icon\n\nThe default size / color is decided by the final rendering (with\nOUI.Material.renderIcon for instance).\n\nWhen used inside other components, like buttons, the color & size will most\nprobably be ignored.\n\nA future version may separated icons with size/color from raw icons\n\n","args":[],"cases":[]},{"name":"Renderer","comment":" ","args":[],"cases":[["Svg",["Basics.Int -> Color.Color -> Svg.Svg Basics.Never"]],["Html",["Basics.Int -> Color.Color -> Html.Html Basics.Never"]]]}],"aliases":[{"name":"Properties","comment":" ","args":[],"type":"{ size : Maybe.Maybe Basics.Int, color : Maybe.Maybe OUI.Color, renderer : OUI.Icon.Renderer }"}],"values":[{"name":"check","comment":" The 'check' icon, taken from icidasset/elm-material-icons\n","type":"OUI.Icon.Icon"},{"name":"clear","comment":" A simple 'clear' icon, taken from icidasset/elm-material-icons\n","type":"OUI.Icon.Icon"},{"name":"dark_mode","comment":" 'Dark Mode' icon, taken from icidasset/elm-material-icons\n","type":"OUI.Icon.Icon"},{"name":"elmMaterialIcons","comment":" For using [icidasset/elm-material-icons](https://dark.elm.dmy.fr/packages/icidasset/elm-material-icons/latest/)\n\n    import Material.Icons exposing (offline_bolt)\n    import Material.Icons.Types exposing (Coloring(..))\n    import OUI.Icon exposing (Icon)\n\n    check : Icon\n    check =\n        Material.Icons.done\n            |> OUI.Icon.elmMaterialIcons Color\n\n","type":"(Color.Color -> coloring) -> (Basics.Int -> coloring -> Html.Html Basics.Never) -> OUI.Icon.Icon"},{"name":"light_mode","comment":" 'Light Mode' icon, taken from icidasset/elm-material-icons\n","type":"OUI.Icon.Icon"},{"name":"materialIcons","comment":" For using [danmarcab/material-icons](https://dark.elm.dmy.fr/packages/danmarcab/material-icons/latest/)\n\n    import Material.Icons.Action\n    import OUI.Icon exposing (Icon)\n\n    check : Icon\n    check =\n        Material.Icons.Action.done\n            |> OUI.Icon.materialIcons\n\n","type":"(Color.Color -> Basics.Int -> Svg.Svg Basics.Never) -> OUI.Icon.Icon"},{"name":"properties","comment":" returns the properties of an icon\n","type":"OUI.Icon.Icon -> OUI.Icon.Properties"},{"name":"withColor","comment":" set the icon color\n","type":"OUI.Color -> OUI.Icon.Icon -> OUI.Icon.Icon"},{"name":"withSize","comment":" set the icon size\n","type":"Basics.Int -> OUI.Icon.Icon -> OUI.Icon.Icon"}],"binops":[]},{"name":"OUI.Material","comment":" A elm-ui based renderer API\n\n\n# Basics\n\n@docs text, icon\n\n\n# Inputs\n\n@docs button, checkbox, switch, textField\n\n\n# Complex\n\n@docs navigation\n\n","unions":[],"aliases":[],"values":[{"name":"button","comment":" Render a button\n","type":"OUI.Material.Theme.Theme -> List.List (Element.Attribute msg) -> OUI.Button.Button { constraints | hasAction : () } msg -> Element.Element msg"},{"name":"checkbox","comment":" Render a checkbox\n","type":"OUI.Material.Theme.Theme -> List.List (Element.Attribute msg) -> OUI.Checkbox.Checkbox { hasAction : (), withChecked : () } msg -> Element.Element msg"},{"name":"icon","comment":" Render an icon\n","type":"OUI.Material.Theme.Theme -> List.List (Element.Attribute msg) -> OUI.Icon.Icon -> Element.Element msg"},{"name":"navigation","comment":" Render a navigation trail/drawer\n","type":"OUI.Material.Theme.Theme -> List.List (Element.Attribute msg) -> OUI.Navigation.Navigation btnC key msg -> Element.Element msg"},{"name":"switch","comment":" Render a Switch\n","type":"OUI.Material.Theme.Theme -> List.List (Element.Attribute msg) -> OUI.Switch.Switch msg -> Element.Element msg"},{"name":"text","comment":" Render a text\n","type":"OUI.Material.Theme.Theme -> OUI.Text.Text -> Element.Element msg"},{"name":"textField","comment":" Render a TextField\n","type":"OUI.Material.Theme.Theme -> List.List (Element.Attribute msg) -> OUI.TextField.TextField msg -> Element.Element msg"}],"binops":[]},{"name":"OUI.Material.Color","comment":" Material 3 color utilities and scheme\n\n@docs KeyColors, Scheme, defaultKeyColors, defaultLightScheme, defaultDarkScheme, lightFromKeyColors, darkFromKeyColors\n\n@docs getColor, getOnColor, getElementColor, getContainerColor, getOnContainerColor, getOnElementColor, toElementColor, getContainerElementColor, getOnContainerElementColor\n\n@docs hoverStateLayerOpacity, focusStateLayerOpacity, pressStateLayerOpacity\n\n@docs setAlpha, withShade, isError\n\n","unions":[],"aliases":[{"name":"KeyColors","comment":" A set of colors suitable for generating a color scheme\n","args":[],"type":"{ primary : Color.Color, secondary : Color.Color, tertiary : Color.Color, error : Color.Color, neutral : Color.Color, neutralVariant : Color.Color }"},{"name":"Scheme","comment":" A Material 3 color scheme\n","args":[],"type":"{ primary : Color.Color, primaryContainer : Color.Color, onPrimary : Color.Color, onPrimaryContainer : Color.Color, inversePrimary : Color.Color, secondary : Color.Color, secondaryContainer : Color.Color, onSecondary : Color.Color, onSecondaryContainer : Color.Color, tertiary : Color.Color, tertiaryContainer : Color.Color, onTertiary : Color.Color, onTertiaryContainer : Color.Color, surface : Color.Color, surfaceDim : Color.Color, surfaceBright : Color.Color, surfaceContainerLowest : Color.Color, surfaceContainerLow : Color.Color, surfaceContainer : Color.Color, surfaceContainerHigh : Color.Color, surfaceContainerHighest : Color.Color, surfaceVariant : Color.Color, onSurface : Color.Color, onSurfaceVariant : Color.Color, inverseSurface : Color.Color, inverseOnSurface : Color.Color, background : Color.Color, onBackground : Color.Color, error : Color.Color, errorContainer : Color.Color, onError : Color.Color, onErrorContainer : Color.Color, outline : Color.Color, outlineVariant : Color.Color, shadow : Color.Color, surfaceTint : Color.Color, scrim : Color.Color }"}],"values":[{"name":"darkFromKeyColors","comment":" Create a dark color scheme from key colors\n","type":"OUI.Material.Color.KeyColors -> OUI.Material.Color.Scheme"},{"name":"defaultDarkScheme","comment":" The default Material 3 dark theme based on the default key colors\n","type":"OUI.Material.Color.Scheme"},{"name":"defaultKeyColors","comment":" The default Material 3 key colors\n","type":"OUI.Material.Color.KeyColors"},{"name":"defaultLightScheme","comment":" The default Material 3 light theme based on the default key colors\n","type":"OUI.Material.Color.Scheme"},{"name":"focusStateLayerOpacity","comment":" The \"focus\" state layer opacity\n","type":"Basics.Float"},{"name":"getColor","comment":" Get a color of a scheme\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Color.Color"},{"name":"getContainerColor","comment":" get a container color\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Color.Color"},{"name":"getContainerElementColor","comment":" get a \"container\" color directly as a 'Element.color'\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Element.Color"},{"name":"getElementColor","comment":" Get a color of a scheme directly as a 'Element.Color'\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Element.Color"},{"name":"getOnColor","comment":" Get a \"on\" color of a scheme\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Color.Color"},{"name":"getOnContainerColor","comment":" get a \"on container\" color\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Color.Color"},{"name":"getOnContainerElementColor","comment":" get a \"on container\" color directly as a 'Element.color'\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Element.Color"},{"name":"getOnElementColor","comment":" Get a \"on\" color of a scheme directly as a 'Element.Color'\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Element.Color"},{"name":"hoverStateLayerOpacity","comment":" The \"hover\" state layer opacity\n","type":"Basics.Float"},{"name":"isError","comment":" returns true if the given color is a error color\n","type":"OUI.Color -> Basics.Bool"},{"name":"lightFromKeyColors","comment":" Create a light color scheme from key colors\n","type":"OUI.Material.Color.KeyColors -> OUI.Material.Color.Scheme"},{"name":"pressStateLayerOpacity","comment":" The \"press\" state layer opacity\n","type":"Basics.Float"},{"name":"setAlpha","comment":" set the opacity of a color\n","type":"Basics.Float -> Color.Color -> Color.Color"},{"name":"toElementColor","comment":" Convert a Color to Element.Color\n","type":"Color.Color -> Element.Color"},{"name":"withShade","comment":" Simulates adding a color in front (subtractive color mixing).\n\n    --Darkens the color by 50%\n    withShade (Color.rgb255 255 255 255) 0.5\n\n    --Makes the color 50% more red\n    withShade (Color.rgb255 255 0 0) 0.5\n\n","type":"Color.Color -> Basics.Float -> Color.Color -> Color.Color"}],"binops":[]},{"name":"OUI.Material.Theme","comment":"\n\n@docs Theme, defaultTheme, Typescale, defaultTypescale\n\n@docs ButtonTheme, CheckboxTheme, SwitchTheme, TextFieldTheme\n\n","unions":[],"aliases":[{"name":"ButtonTheme","comment":" A Button theme\n","args":[],"type":"OUI.Material.Button.Theme"},{"name":"CheckboxTheme","comment":" A Checkbox theme\n","args":[],"type":"OUI.Material.Checkbox.Theme"},{"name":"SwitchTheme","comment":" A Switch theme\n","args":[],"type":"OUI.Material.Switch.Theme"},{"name":"TextFieldTheme","comment":" A TextField theme\n","args":[],"type":"OUI.Material.TextField.Theme"},{"name":"Theme","comment":" A material theme\n\nContains a color scheme, a typescale, and layouts for all the components\n\n","args":[],"type":"{ colorscheme : OUI.Material.Color.Scheme, typescale : OUI.Material.Theme.Typescale, button : OUI.Material.Theme.ButtonTheme, checkbox : OUI.Material.Theme.CheckboxTheme, navigation : OUI.Material.Theme.NavigationTheme, switch : OUI.Material.Theme.SwitchTheme, textfield : OUI.Material.Theme.TextFieldTheme }"},{"name":"Typescale","comment":" A font typescale\n","args":[],"type":"OUI.Material.Typography.Typescale"}],"values":[{"name":"defaultTheme","comment":" The default Material 3 theme\n","type":"OUI.Material.Theme.Theme"},{"name":"defaultTypescale","comment":" The default Material 3 Typescale\n","type":"OUI.Material.Theme.Typescale"}],"binops":[]},{"name":"OUI.Navigation","comment":" A Navigation drawer(+rail) component\n\n@docs Navigation, new, withSelected\n\n@docs rail, modal\n\n@docs withFAB, withHeader, withImageHeader\n\n\n# Adding content\n\n@docs addEntry, addEntryWithBadge\n@docs addSectionHeader, addDivider\n\n\n# Internals\n\n@docs Mode, Entry, EntryProperties, NavigationProperties, properties\n\n","unions":[{"name":"Entry","comment":" ","args":["key"],"cases":[["Entry",["key","OUI.Navigation.EntryProperties"]],["SectionHeader",["String.String"]],["Divider",[]]]},{"name":"Mode","comment":" ","args":[],"cases":[["Rail",[]],["Drawer",[]],["ModalDrawer",[]]]},{"name":"Navigation","comment":" A Navigation component\n","args":["btnC","key","msg"],"cases":[]}],"aliases":[{"name":"EntryProperties","comment":" ","args":[],"type":"{ label : String.String, icon : OUI.Icon.Icon, badge : Maybe.Maybe String.String }"},{"name":"NavigationProperties","comment":" ","args":["btnC","key","msg"],"type":"{ imageHeader : Maybe.Maybe OUI.Image.Image, fab : Maybe.Maybe (OUI.Button.Button { btnC | hasAction : (), hasIcon : () } msg), header : Maybe.Maybe String.String, selected : Maybe.Maybe key, entries : List.List (OUI.Navigation.Entry key), mode : OUI.Navigation.Mode, onSelect : key -> msg, onDismiss : Maybe.Maybe msg, activeColor : OUI.Color }"}],"values":[{"name":"addDivider","comment":" Add a divider\n","type":"OUI.Navigation.Navigation btnC key msg -> OUI.Navigation.Navigation btnC key msg"},{"name":"addEntry","comment":" Add a regular entry\n","type":"key -> String.String -> OUI.Icon.Icon -> OUI.Navigation.Navigation btnC key msg -> OUI.Navigation.Navigation btnC key msg"},{"name":"addEntryWithBadge","comment":" Add an entry with a badge\n","type":"key -> String.String -> OUI.Icon.Icon -> String.String -> OUI.Navigation.Navigation btnC key msg -> OUI.Navigation.Navigation btnC key msg"},{"name":"addSectionHeader","comment":" Add a section header\n","type":"String.String -> OUI.Navigation.Navigation btnC key msg -> OUI.Navigation.Navigation btnC key msg"},{"name":"modal","comment":" Change to modal\n\nA modal is a drawer that emit a 'onDismiss' message if the user clicks outside\nof it\n\n","type":"msg -> OUI.Navigation.Navigation btnC key msg -> OUI.Navigation.Navigation btnC key msg"},{"name":"new","comment":" create a new empty Navigation drawer\n","type":"(key -> msg) -> OUI.Navigation.Navigation btnC key msg"},{"name":"properties","comment":" ","type":"OUI.Navigation.Navigation btnC key msg -> OUI.Navigation.NavigationProperties btnC key msg"},{"name":"rail","comment":" Change the drawer into a rail\n","type":"OUI.Navigation.Navigation btnC key msg -> OUI.Navigation.Navigation btnC key msg"},{"name":"withFAB","comment":" Add a FAB button before the entries\n","type":"OUI.Button.Button { btnC | hasAction : (), hasIcon : () } msg -> OUI.Navigation.Navigation btnC key msg -> OUI.Navigation.Navigation btnC key msg"},{"name":"withHeader","comment":" Add a text header on top of the trail/drawer\n","type":"String.String -> OUI.Navigation.Navigation btnC key msg -> OUI.Navigation.Navigation btnC key msg"},{"name":"withImageHeader","comment":" Add a image header on top of the trail/drawer\n","type":"OUI.Image.Image -> OUI.Navigation.Navigation btnC key msg -> OUI.Navigation.Navigation btnC key msg"},{"name":"withSelected","comment":" Set the currently selected entry\n","type":"key -> OUI.Navigation.Navigation btnC key msg -> OUI.Navigation.Navigation btnC key msg"}],"binops":[]},{"name":"OUI.Showcase","comment":" Provides pages for a OUI.Explorer\n\n@docs addPages\n\n","unions":[],"aliases":[],"values":[{"name":"addPages","comment":" add the default showcase pages to a Explorer\n","type":"OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg current previous currentMsg previousMsg -> OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg OUI.Showcase.Navigation.Model (Spa.PageStack.Model Spa.SetupError OUI.Showcase.TextFields.Model (Spa.PageStack.Model Spa.SetupError OUI.Showcase.Switches.Model (Spa.PageStack.Model Spa.SetupError () (Spa.PageStack.Model Spa.SetupError () (Spa.PageStack.Model Spa.SetupError () (Spa.PageStack.Model Spa.SetupError () (Spa.PageStack.Model Spa.SetupError current previous))))))) (OUI.Explorer.BookMsg OUI.Showcase.Navigation.Msg) (Spa.PageStack.Msg OUI.Explorer.Route (OUI.Explorer.BookMsg OUI.Showcase.TextFields.Msg) (Spa.PageStack.Msg OUI.Explorer.Route (OUI.Explorer.BookMsg OUI.Showcase.Switches.Msg) (Spa.PageStack.Msg OUI.Explorer.Route (OUI.Explorer.BookMsg ()) (Spa.PageStack.Msg OUI.Explorer.Route (OUI.Explorer.BookMsg ()) (Spa.PageStack.Msg OUI.Explorer.Route (OUI.Explorer.BookMsg ()) (Spa.PageStack.Msg OUI.Explorer.Route (OUI.Explorer.BookMsg ()) (Spa.PageStack.Msg OUI.Explorer.Route currentMsg previousMsg)))))))"}],"binops":[]},{"name":"OUI.Switch","comment":" A Switch component\n\n@docs Switch, new\n\n@docs withIconSelected, withIconUnselected, withColor, onChange\n\n@docs properties\n\n","unions":[{"name":"Switch","comment":" A Switch component\n","args":["msg"],"cases":[]}],"aliases":[],"values":[{"name":"new","comment":" create a new unselected Switch\n","type":"Basics.Bool -> OUI.Switch.Switch msg"},{"name":"onChange","comment":" Set the event handler\n","type":"(Basics.Bool -> msg) -> OUI.Switch.Switch msg0 -> OUI.Switch.Switch msg"},{"name":"properties","comment":" ","type":"OUI.Switch.Switch msg -> { selected : Basics.Bool, iconSelected : Maybe.Maybe OUI.Icon.Icon, iconUnselected : Maybe.Maybe OUI.Icon.Icon, color : OUI.Color, onChange : Maybe.Maybe (Basics.Bool -> msg) }"},{"name":"withColor","comment":" Change the primary color\n","type":"OUI.Color -> OUI.Switch.Switch msg -> OUI.Switch.Switch msg"},{"name":"withIconSelected","comment":" Set the icon to use when selected\n","type":"OUI.Icon.Icon -> OUI.Switch.Switch msg -> OUI.Switch.Switch msg"},{"name":"withIconUnselected","comment":" Set the icon to use when unselected\n","type":"OUI.Icon.Icon -> OUI.Switch.Switch msg -> OUI.Switch.Switch msg"}],"binops":[]},{"name":"OUI.Text","comment":"\n\n@docs Type, Size, Text\n@docs text, withSize, withType\n\n\n# Direct constructors\n\n@docs displayLarge, displayMedium, displaySmall\n@docs headlineLarge, headlineMedium, headlineSmall\n@docs titleLarge, titleMedium, titleSmall\n@docs labelLarge, labelMedium, labelSmall\n@docs bodyLarge, bodyMedium, bodySmall\n\n","unions":[{"name":"Size","comment":" Text sizes\n","args":[],"cases":[["Small",[]],["Medium",[]],["Large",[]]]},{"name":"Text","comment":" A Text component\n","args":[],"cases":[["Text",["OUI.Text.Type","OUI.Text.Size","String.String"]]]},{"name":"Type","comment":" Text types\n","args":[],"cases":[["Display",[]],["Headline",[]],["Title",[]],["Label",[]],["Body",[]]]}],"aliases":[],"values":[{"name":"bodyLarge","comment":" create a body large text\n","type":"String.String -> OUI.Text.Text"},{"name":"bodyMedium","comment":" create a body medium text\n","type":"String.String -> OUI.Text.Text"},{"name":"bodySmall","comment":" create a body small text\n","type":"String.String -> OUI.Text.Text"},{"name":"displayLarge","comment":" create a display large text\n","type":"String.String -> OUI.Text.Text"},{"name":"displayMedium","comment":" create a display medium text\n","type":"String.String -> OUI.Text.Text"},{"name":"displaySmall","comment":" create a display small text\n","type":"String.String -> OUI.Text.Text"},{"name":"headlineLarge","comment":" create a headline large text\n","type":"String.String -> OUI.Text.Text"},{"name":"headlineMedium","comment":" create a headline medium text\n","type":"String.String -> OUI.Text.Text"},{"name":"headlineSmall","comment":" create a headline small text\n","type":"String.String -> OUI.Text.Text"},{"name":"labelLarge","comment":" create a label large text\n","type":"String.String -> OUI.Text.Text"},{"name":"labelMedium","comment":" create a label medium text\n","type":"String.String -> OUI.Text.Text"},{"name":"labelSmall","comment":" create a label small text\n","type":"String.String -> OUI.Text.Text"},{"name":"text","comment":" Create a new text component\n\nwith default \"body\" type and \"medium\" size\n\n","type":"String.String -> OUI.Text.Text"},{"name":"titleLarge","comment":" create a title large text\n","type":"String.String -> OUI.Text.Text"},{"name":"titleMedium","comment":" create a title medium text\n","type":"String.String -> OUI.Text.Text"},{"name":"titleSmall","comment":" create a title small text\n","type":"String.String -> OUI.Text.Text"},{"name":"withSize","comment":" set the text size\n","type":"OUI.Text.Size -> OUI.Text.Text -> OUI.Text.Text"},{"name":"withType","comment":" set the text type\n","type":"OUI.Text.Type -> OUI.Text.Text -> OUI.Text.Text"}],"binops":[]},{"name":"OUI.TextField","comment":" A [Text Field](https://m3.material.io/components/text-fields) component\n\n@docs TextField, Type, new\n@docs multiline, withColor, withType, withSupportingText, withFocused, withLeadingIcon, withTrailingIcon, withClickableTrailingIcon, withErrorIcon\n@docs onFocusBlur\n@docs Properties, properties\n\n","unions":[{"name":"TextField","comment":" A Text input component\n","args":["msg"],"cases":[]},{"name":"Type","comment":" Text input can be filled or outlined\n","args":[],"cases":[["Filled",[]],["Outlined",[]]]}],"aliases":[{"name":"Properties","comment":" ","args":["msg"],"type":"{ onChange : String.String -> msg, label : String.String, isMultiline : Basics.Bool, spellcheck : Basics.Bool, value : String.String, onFocus : Maybe.Maybe msg, onLoseFocus : Maybe.Maybe msg, hasFocus : Basics.Bool, supportingText : Maybe.Maybe String.String, color : OUI.Color, type_ : OUI.TextField.Type, leadingIcon : Maybe.Maybe OUI.Icon.Icon, trailingIcon : Maybe.Maybe OUI.Icon.Icon, onTrailingIconClick : Maybe.Maybe msg, errorIcon : Maybe.Maybe OUI.Icon.Icon }"}],"values":[{"name":"multiline","comment":" Enable multiline input.\n","type":"Basics.Bool -> OUI.TextField.TextField msg -> OUI.TextField.TextField msg"},{"name":"new","comment":" Create a new text input\n","type":"String.String -> (String.String -> msg) -> String.String -> OUI.TextField.TextField msg"},{"name":"onFocusBlur","comment":" set the onFocus / onLoseFocus events\n","type":"msg -> msg -> OUI.TextField.TextField msg -> OUI.TextField.TextField msg"},{"name":"properties","comment":" ","type":"OUI.TextField.TextField msg -> OUI.TextField.Properties msg"},{"name":"withClickableTrailingIcon","comment":" add a clickable trailing icon\n","type":"msg -> OUI.Icon.Icon -> OUI.TextField.TextField msg -> OUI.TextField.TextField msg"},{"name":"withColor","comment":" change the input main color\n","type":"OUI.Color -> OUI.TextField.TextField msg -> OUI.TextField.TextField msg"},{"name":"withErrorIcon","comment":" set the error icon\n","type":"OUI.Icon.Icon -> OUI.TextField.TextField msg -> OUI.TextField.TextField msg"},{"name":"withFocused","comment":" set the 'focused' current state of the input\n","type":"Basics.Bool -> OUI.TextField.TextField msg -> OUI.TextField.TextField msg"},{"name":"withLeadingIcon","comment":" set the leading icon\n","type":"OUI.Icon.Icon -> OUI.TextField.TextField msg -> OUI.TextField.TextField msg"},{"name":"withSupportingText","comment":" add a supporting text below the input\n","type":"String.String -> OUI.TextField.TextField msg -> OUI.TextField.TextField msg"},{"name":"withTrailingIcon","comment":" set the trailing icon\n","type":"OUI.Icon.Icon -> OUI.TextField.TextField msg -> OUI.TextField.TextField msg"},{"name":"withType","comment":" change the input type\n","type":"OUI.TextField.Type -> OUI.TextField.TextField msg -> OUI.TextField.TextField msg"}],"binops":[]},{"name":"OUI.Utils.ARIA","comment":" Interface for [HTML's ARIA](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA).\n\nThis module is copied from [Paack-ui](https://package.elm-lang.org/packages/PaackEng/paack-ui/latest/UI-Utils-ARIA)\n\n@docs Role, ElementSemantics\n\n\n# Building\n\n@docs roleButton, roleImage, rolePresentation, roleCheckbox, roleTab, roleSwitch, roleToggleButton\n\n\n## Radio buttons\n\n@docs roleRadioGroup, roleRadio\n\n\n# Global options\n\n@docs withLabel\n\n\n# Rendering\n\n@docs toElementAttributes\n\n","unions":[{"name":"Role","comment":" Aria roles\n","args":[],"cases":[]}],"aliases":[{"name":"ElementSemantics","comment":" Use roles for creating ARIA element's semantics.\nRoles defines the type of UI element.\n\nSee [MDN article](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques#Roles).\n\n","args":[],"type":"{ role : OUI.Utils.ARIA.Role, label : Maybe.Maybe String.String }"}],"values":[{"name":"roleButton","comment":" \"The button role should be used for clickable elements that trigger a response when activated by the user.\" - MDN\n\n    Element.el\n        (Events.onClick Msg.SomeEvent :: ARIA.toElementAttributes ARIA.roleButton)\n        someChildElement\n\n","type":"OUI.Utils.ARIA.ElementSemantics"},{"name":"roleCheckbox","comment":" \"The checkbox role is used for checkable interactive controls.\" -MDN\n\n    Element.row\n        (ARIA.toElementAttributes <| ARIA.roleCheckbox False)\n        [ notCheckedIcon\n        , Element.text \"I accept the Terms of Service\"\n        ]\n\n","type":"Basics.Bool -> OUI.Utils.ARIA.ElementSemantics"},{"name":"roleImage","comment":" \"Can be used to identify multiple elements inside page content that should be considered as a single image.\" - MDN\n\n    Element.el\n        (ARIA.toElementAttributes <| ARIA.roleImage altText)\n        [ Element.text \"😺 Meow\" ]\n\n**NOTE**: This role enforces aria-label option.\n\n","type":"String.String -> OUI.Utils.ARIA.ElementSemantics"},{"name":"rolePresentation","comment":" \"An element whose content is completely presentational (like a spacer image, decorative graphic, or clearing element)\" - W3C\n\n    Element.el\n        (ARIA.toElementAttributes ARIA.rolePresentation)\n        totallyRedundantElement\n\n","type":"OUI.Utils.ARIA.ElementSemantics"},{"name":"roleRadio","comment":" \"A checkable input in a group of elements with the same role, only one of which can be checked at a time.\" - W3C\n\n    Element.row\n        (ARIA.toElementAttributes <| ARIA.roleRadio True)\n        [ checkedIcon\n        , Element.text \"Chocolate\"\n        ]\n\n","type":"Basics.Bool -> OUI.Utils.ARIA.ElementSemantics"},{"name":"roleRadioGroup","comment":" \"A radiogroup is a type of select list that can only have a single entry checked at any one time.\" - W3C\n\n    Element.column\n        (ARIA.toElementAttributes <| ARIA.roleRadioGroup \"Pick an ice cream flavor\")\n        [ chocolateIceCream\n        , strawberryIceCream\n        ]\n\n**NOTE**: This role enforces aria-label option.\n\n","type":"String.String -> OUI.Utils.ARIA.ElementSemantics"},{"name":"roleSwitch","comment":" \"The ARIA switch role is functionally identical to the checkbox role,\nexcept that instead of representing checked/unchecked states, which are fairly generic in meaning,\nthe switch role represents the states on/off.\" -MDN\n\n    Element.el\n        (Event.onClick turnOnMsg :: (ARIA.toElementAttributes <| ARIA.roleSwitch False))\n        offSwitchIcon\n\n","type":"Basics.Bool -> OUI.Utils.ARIA.ElementSemantics"},{"name":"roleTab","comment":" \"The ARIA tab role indicates an interactive element inside a tablist.\" -MDN\n\n    Element.row []\n        [ Element.el\n            (ARIA.roleTab True\n                |> ARIA.toElementAttributes\n                |> (::) tabIndex 0\n                |> (::) Event.onClick (Msg.SetTab TabFirst)\n            )\n            (Element.text \"Tab label\")\n        , Element.el\n            (ARIA.roleTab False\n                |> ARIA.toElementAttributes\n                |> (::) tabIndex -1\n                |> (::) Event.onClick (Msg.SetTab TabSecond)\n            )\n            (Element.text \"Another tab\")\n        ]\n\n**NOTE**: We're missing `aria-controls`.\nAnd MDN recomends using `tabindex` as `0` on selected tab and `-1` on non-active tabs.\n\n","type":"Basics.Bool -> OUI.Utils.ARIA.ElementSemantics"},{"name":"roleToggleButton","comment":" A toggle button has the button role along with its pressed state\n\n    Element.el\n        (Events.onClick Msg.SomeEvent\n            :: ARIA.toElementAttributes ARIA.roleToggleButton isToggled\n        )\n        someChildElement\n\n","type":"Basics.Bool -> OUI.Utils.ARIA.ElementSemantics"},{"name":"toElementAttributes","comment":" Transform a [`ElementSemantics`](#ElementSemantics) in a list of [`Element.Attribute`](/packages/mdgriffith/elm-ui/latest/Element#Attribute).\n","type":"OUI.Utils.ARIA.ElementSemantics -> List.List (Element.Attribute msg)"},{"name":"withLabel","comment":" \"Defines a string value that labels the current element\" -W3C\n\n    ARIA.roleCheckbox False\n        |> ARIA.withLabel \"I agree with the policy\"\n        |> ARIA.toElementAttributes\n\n**NOTE**: This is a global optional parameter, roles builders enforce it when necessary.\n\n","type":"String.String -> OUI.Utils.ARIA.ElementSemantics -> OUI.Utils.ARIA.ElementSemantics"}],"binops":[]}]